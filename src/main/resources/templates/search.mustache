{{>layouts/searchsidebar}}

<!-- content -->
<main class="body">
    <!-- 검색 폼 -->
    <nav class="navbar sticky-top mb-3">
        <div class="d-flex align-items-center">
            <div>
                    <span><i class="fa-solid fa-chevron-left chevrons"></i><i
                            class="fa-solid fa-chevron-right chevrons"></i></span>
            </div>
            <div>
                <input type="text" class="mx-4 form-control" id="search-input" placeholder="어떤 음악을 듣고 싶으세요?"
                       onkeyup="search()" style="border-radius: 20px" />
            </div>
        </div>
    </nav>
    <!-- 검색 결과를 표시할 목록 -->
    <ul id="search-results"></ul>
    <!-- 영상이 노출될 영역 -->
    <div id="player" style="display: none;"></div>
    </div>

    <script>
        var player; // IFrame Player 객체
        var duration; // 비디오의 전체 길이
        var progressInterval; // 플레이바 업데이트 인터벌
        var youtube_api_key = 'AIzaSyCnA74oy9ZZo3D0QBq02Ap8pE9Bwr3vEMo';

        // IFrame Player API 로드
        var tag = document.createElement('script');
        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 검색 함수
        function search() {
            // 검색어 가져오기
            var search_query = document.getElementById('search-input').value;

            // API 호출하기
            var api_key = '5aab513055fea4a2802fbd695ea148a9';
            var limit = 3;
            var search_url = 'https://ws.audioscrobbler.com/2.0/?method=track.search&track=' + search_query + '&api_key=' + api_key + '&format=json&limit=' + limit;

            // 검색 결과 가져오기
            fetch(search_url)
                    .then(response => response.json())
                    .then(data => {
                        // 검색 결과를 표시할 목록
                        var search_results = document.getElementById('search-results');
                        search_results.innerHTML = '';

                        // 검색 결과에서 각 트랙 정보 가져오기
                        var tracks = data.results.trackmatches.track;
                        for (var i = 0; i < tracks.length; i++) {
                            let track = tracks[i];
                            // 검색 결과를 목록에 추가하기
                            var li = document.createElement('li');
                            li.innerText = track.name + ' - ' + track.artist;
                            li.style.cursor = 'pointer';
                            li.addEventListener('click', function () {
                                // 검색된 곡의 YouTube 비디오 검색
                                var video_query = track.name + ' ' + track.artist + ' official music video';
                                var video_url = createVideoUrl(video_query);

                                // 비디오 검색 결과 가져오기
                                fetch(video_url)
                                        .then(response => response.json())
                                        .then(data => {
                                            var video_id = data.items[0].id.videoId;

                                            // IFrame Player 생성
                                            if (!player) {
                                                player = new YT.Player('player', {
                                                    height: '360',
                                                    width: '640',
                                                    videoId: video_id,
                                                    playerVars: {
                                                        'rel': 0,
                                                        'controls': 0,
                                                        'autoplay': 1,
                                                        'mute': 0,
                                                        'loop': 1,
                                                        'playsinline': 1,
                                                        'playlist': ''
                                                    },
                                                    events: {
                                                        'onReady': onPlayerReady,
                                                        'onStateChange': onPlayerStateChange
                                                    }
                                                });
                                                // 플레이
                                                // 플레이바 업데이트 인터벌
                                                progressInterval = setInterval(updateProgressBar, 100);
                                            } else {
                                                // IFrame Player에 비디오 ID 설정
                                                player.loadVideoById(video_id);
                                            }
                                        });
                            });
                            search_results.appendChild(li);
                        }
                    });
        }

        // 플레이어가 준비되면 호출되는 함수
        function onPlayerReady(event) {
            event.target.playVideo();
            duration = player.getDuration();
        }

        // 플레이어의 상태가 변경될 때 호출되는 함수
        function onPlayerStateChange(event) {
            // 재생이 끝나면 다음 비디오 재생
            if (event.data === YT.PlayerState.ENDED) {
                var search_results = document.getElementById('search-results');
                var next_video = search_results.childNodes[0];
                next_video.click();
            }
        }

        // 검색 함수에서 사용할 URL 생성 함수
        function createVideoUrl(video_query) {
            var encoded_query = encodeURIComponent(video_query);
            var url = 'https://www.googleapis.com/youtube/v3/search?part=snippet&q=' + encoded_query + '&key=' + youtube_api_key;
            return url;
        }

        // 플레이바 업데이트 함수
        function updateProgressBar() {
            if (player && duration) {
                var currentTime = player.getCurrentTime();
                var progressPercent = (currentTime / duration) * 100;
                var progressBar = document.getElementById('progress-bar');
                if (progressBar) {
                    progressBar.style.width = progressPercent + '%';
                }

                // 현재 시간 및 전체 길이를 형식에 맞게 표시
                var currentTimeDisplay = document.getElementById('current-time');
                var totalTimeDisplay = document.getElementById('total-time');
                if (currentTimeDisplay && totalTimeDisplay) {
                    currentTimeDisplay.innerHTML = formatTime(currentTime);
                    totalTimeDisplay.innerHTML = formatTime(duration);
                }
            }
        }

        // 재생/일시정지 버튼 클릭 시 호출되는 함수
        function togglePlayPause() {
            if (player) {
                var playPauseBtn = document.getElementById('play-pause-btn-new');
                if (player.getPlayerState() === YT.PlayerState.PLAYING) {
                    player.pauseVideo();
                    playPauseBtn.innerHTML = 'Play';
                } else {
                    player.playVideo();
                    playPauseBtn.innerHTML = 'Pause';
                }
            }
        }

        // 볼륨 조절 슬라이더 값 변경 시 호출되는 함수
        function changeVolume() {
            if (player) {
                var volumeSlider = document.getElementById('volume-slider');
                var volume = volumeSlider.value;
                player.setVolume(volume);
            }
        }

        // 시간을 00:00 형식으로 변환하는 함수
        function formatTime(time) {
            var minutes = Math.floor(time / 60);
            var seconds = Math.floor(time % 60);
            if (seconds < 10) {
                seconds = '0' + seconds;
            }
            return minutes + ':' + seconds;
        }

        function loveTrack(trackName, artistName) {
            var api_key = '5aab513055fea4a2802fbd695ea148a9';
            var user = 'mango';
            var api_sig = md5('api_key' + api_key + 'artist' + artistName + 'methodtrack.love' + 'sk' + 'last_fm_session_key' + 'track' + trackName + 'cd019e1c2420a7bc7ebb69921e6fad31');
            var url = `https://ws.audioscrobbler.com/2.0/?method=track.love&api_key=${api_key}&track=${encodeURIComponent(trackName)}&artist=${encodeURIComponent(artistName)}&api_sig=${api_sig}&sk=your_last_fm_session_key&format=json`;

            fetch(url, { method: 'POST' })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                    });
        }

        function onLikeButtonClick() {
            var trackName = document.getElementById('song-title').innerText;
            var artistName = document.getElementById('song-artist').innerText;
            loveTrack(trackName, artistName);
        }

        function saveLovedTrack(trackName, artistName) {
            var lovedTracks = JSON.parse(localStorage.getItem('lovedTracks')) || [];
            var track = { title: trackName, artist: artistName };
            lovedTracks.push(track);
            localStorage.setItem('lovedTracks', JSON.stringify(lovedTracks));
        }

        // DOMContentLoaded 이벤트를 사용하여 초기화 코드 실행
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('search-button').addEventListener('click', search);
            document.getElementById('play-pause-btn-new').addEventListener('click', togglePlayPause);
            document.getElementById('volume-slider').addEventListener('input', changeVolume);
            document.getElementById("like-icon").addEventListener("click", onLikeButtonClick);
        });

        // YouTube Data API 키
        var youtube_api_key = 'AIzaSyCnA74oy9ZZo3D0QBq02Ap8pE9Bwr3vEMo';
    </script>

    <div class="container-fluid" id="recentsearches">
        <h3 class="greeting mb-3 mt-3">최근 검색</h3>
        <div class="row row-cols-sm-6 g-3" id="midsidecards">
            <div class="col-2">
                <div class="card" id="darker">
                    <img src="https://www.fubiz.net/wp-content/uploads/2018/01/01-kendrick-lamar-damn-album-art-2017-billboard-1240.jpg"
                         class="img-fluid rounded-start p-2" style="height: 100%; min-width: 100%" alt="..." />
                    <div class="card-body">
                        <h5 class="card-title">Damn</h5>
                        <p class="card-text">Lorem ipsum...</p>
                    </div>
                </div>
            </div>
            <div class="col-2">
                <div class="card" id="darker">
                    <img src="https://media.pitchfork.com/photos/5bcdf9b8a8f1ec1406cb9892/1:1/w_600/Queen_Bohemian%20Rhapsody%20OST.jpg"
                         class="img-fluid rounded-start p-2" style="height: 100%; min-width: 100%" alt="..." />
                    <div class="card-body">
                        <h5 class="card-title">Album</h5>
                        <p class="card-text">Lorem ipsum...</p>
                    </div>
                </div>
            </div>
            <div class="col-2">
                <div class="card" id="darker">
                    <img src="https://blog.dozmia.com/content/images/2019/01/Portrait-The-Weeknd.jpg"
                         class="img-fluid p-2" style="height: 100%; min-width: 100%; border-radius: 50%" alt="..." />
                    <div class="card-body">
                        <h5 class="card-title">Artist</h5>
                        <p class="card-text">Lorem ipsum...</p>
                    </div>
                </div>
            </div>
            <div class="col-2">
                <div class="card" id="darker">
                    <img src="https://i.scdn.co/image/ab67706f0000000387bff188c40608c48b82068f"
                         class="img-fluid rounded-start p-2" style="height: 100%; min-width: 100%" alt="..." />
                    <div class="card-body">
                        <h5 class="card-title">Mix</h5>
                        <p class="card-text">Lorem ipsum...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- content end -->
{{>layouts/searchfooter}}